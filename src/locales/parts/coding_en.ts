export default {
    _Description: 'This page contains information about how you may contribute to this project by coding.',
    _PageTitle: 'Coding',
    _Title: 'Contribute by Coding',
    GitList: 'GIT Basic Steps &amp; Commands',
    'GitList1.Title': 'GIT Commands',
    'GitList1.Value': 'Commonly used GIT commands:<br/><pre>git config --global user.name &lt;username&gt;</pre><pre>git config --global user.email &lt;email&gt;</pre><pre>git add --all</pre><pre>git push origin dev</pre><pre>git status</pre><pre>git branch</pre><pre>git checkout</pre><pre>git clone</pre><pre>git pull</pre><pre>git stash</pre><pre>git stash pop</pre><a href=\'http://atlassian.com/git/tutorial/git-basics\' target=\'_blank\' class=\'btn btn-block btn-xs wrap btn-primary\'>Basic GIT Tutorial</a>',
    'GitList10.Title': 'Checkout Code For The First Time',
    'GitList10.Value': '<ol><li>Navigate to a directory on your local machine where you would like to have your project you are going to checkout.</li><li>Type <pre>git clone &lt;URL of the repository&gt;</pre> You find the URL of the repository of your choice in Atlassian Stash in the upper right corner of any page in your project. For example, me cloning our Homepage-project would look like this: <pre>git clone https://psilo@www.unterrainer.info:8443/scm/uioh/homepage-mvc.git</pre></li><li>You\'ve successfully checked out the project.</li></ol>',
    'GitList11.Title': 'Revert Changes',
    'GitList11.Value': '<ol><li>If you have any uncommitted changes you want to revert (without losing any commits), type <pre>git reset --hard<br/>git pull</pre></li><li>If you want to revert these commits as well, type <pre>git reset --hard origin/&lt;branch&gt;<br/>git pull</pre></li></ol>',
    'GitList2.Title': 'General Information about the Repositories on Unterrainer Informatik OG',
    'GitList2.Value': '<ul><li>All our projects have at least two branches. A master- and a dev-branch.</li><li>You are only permitted to push to the remote dev-branch of any project you have permission to use.</li><li>Only Psilo may push to and merge to the remote master-branch. You don\'t have the permissions.</li><li>After you\'ve finished your work, start a pull-request so that Psilo may review your changes on the remote dev-branch and merge it to the remote master-branch.</li><li>You may also generate additional remote branches, but please check back with Psilo before doing so.</li></ul>',
    'GitList3.Title': 'Install GIT on Your Local Machine',
    'GitList3.Value': '<ul><li>Install GIT on your local machine.</li><li>When prompted for options just take the default ones. They are reasonable and work. BUT...</li><li>...when choosing the Windows-Integration-Level I would vouch for the second option.</li><li>Just finish the installation by using the default options.</li><li>When done, right-click anywhere in Windows and chose \'git bash\'.</li><li>Type <pre>git config --global http.sslVerify false</pre> That is necessary because we use an invalid CA-certificate for our site.</li><li>Type <pre>git config --global user.name &lt;your git-user\'s name&gt;</pre> to globally set the user-name for all your repositories (that spares you some typing).</li><li>Type <pre>git config --global user.email &lt;your git-user\'s email&gt;</pre> to globally set the user-email for all your repositories (that spares you some typing as well).</li><li>You\'re done.</li></ul>',
    'GitList4.Title': 'Installing',
    'GitList4.Value': '<ol><li>Install GIT on your local machine first.</li><li>Install a GIT-plugin for VS2012.</li><li>Install Atlassian SourceTree.</li><li>Take the link I\'ve sent you (for Atlassian Stash) and use it to change your password and initialize your user there.</li><li>Navigate to the repository of your choice.</li><li>Select the project of your choice.</li><li>Click the \'clone\' button in the top right corner.</li><li>Select a destination folder in SourceTree to start cloning.</li><li>Be patient. This may take a while.</li><li>You now have a local copy of the repository and are ready to go.</li><li>Alternatively you may do this manually, like described later on in \'Checkout Code For The First Time\'.</li></ol>',
    'GitList5.Title': 'Adding files',
    'GitList5.Value': 'You may use your favorite VS2012-GIT-plugin, SourceTree, or...<br/><ol><li>Open a git-bash in your current project and move to your current branch by typing <pre>git checkout &lt;branchName&gt;</pre></li><li>Type <pre>git add &lt;fileName&gt;</pre> or <pre>git add &lt;directory&gt; -r</pre> where -r means that all files are added recursively. <pre>git add --all</pre> would recursively add all Files located in the current directory, that are not listed in the .gitignore-file.</li><li>The file or files are now added to your project and your current branch.</li><li>Don\'t forget to commit the changes locally and remotely.</li></ol>',
    'GitList6.Title': 'Deleting files',
    'GitList6.Value': 'You may use your favorite VS2012-GIT-plugin, SourceTree, or...<br/><ol><li>Open a git-bash in your current project and move to your current branch by typing <pre>git checkout &lt;branchName&gt;</pre></li><li>Type <pre>git rm &lt;fileName&gt;</pre> or <pre>git rm &lt;directory&gt; -r</pre> where -r means that all files are deleted recursively.</li><li>The file or files are now removed from your project.</li><li>Don\'t forget to commit the changes locally and remotely.</li></ol>',
    'GitList7.Title': 'Updating',
    'GitList7.Value': 'You may use your favorite VS2012-GIT-plugin, SourceTree, or...<br/><ol><li>Open a git-bash in your current project and move to your current branch by typing <pre>git checkout &lt;branchName&gt;</pre></li><li>If you have uncommitted changes you want to keep, type <pre>git stash</pre> to stash them away for a while.</li><li>Type <pre>git pull</pre> which will update and merge all remote changes into your repository on all branches you share.</li><li>If you stashed away changes earlier on, type <pre>git stash pop</pre> to merge them back in now.</li><li>You may have to resolve conflicts using your favorite VS2012-GIT-plugin, SourceTree or <pre>git mergetool</pre></li></ol>',
    'GitList8.Title': 'Committing',
    'GitList8.Value': '<ol><li>Make the changes in the code.</li><li>Change to the view of your favorite VS2012-GIT-plugin.</li><li>Select the files you\'ve changed.</li><li>Enter a commit-comment.</li><li>Press \'commit\'<br/>(Alternatively you may open a git-bash, move to your current branch by typing <pre>git checkout &lt;branchName&gt;</pre> and type <pre>git commit -m \'&lt;commit-comment&gt;\'</pre> to commit all your currently changed files).</li><li>You now have created a commit-set. In GIT you\'ll have to push it to your remote branch now together with other commit-sets you might have created (I would say that in that respect several commit-sets represent a working-set of some sort).</li><li>Continue with \'Push Commits To Remote\'.</li></ol>',
    'GitList9.Title': 'Push Commits To Remote',
    'GitList9.Value': '<ol><li>Use SourceTree or open a git-bash and type <pre>git push origin dev</pre> (assuming that your remote repo is called \'origin\', which is the default name, and you want to push to the dev-branch, which you should).</li><li>Your changes are now committed to the dev branch of your remote.</li><li>Now you\'ve got to tell me, that you\'ve done something in the dev-branch and would like me to merge it to the main-branch (master) of the remote repo. This is done by creating a pull-request.</li><li>Navigate to the repo in Atlassian Stash (the web-page) and select your project.</li><li>Press the button \'pull-request\' in the top right corner.</li><li>Fill out the form and send it. I will get it and act accordingly.</li><li>Now you\'re really done.</li></ol>',
    GitListDescription: 'Here are die most commonly used GIT-commands, some information about our repositories and a description of the basic workflows using GIT',
    'InfoList1.Title': 'GIT Repositories',
    'InfoList1.Value': 'This here is the link to our GIT Repositories (we use Stash from Atlassian by the way).<br/>To really get access you need a user and a password, both of which you\'ll get from Psilo after contacting him about it (if he hasn\'t already done so --- check your mail first, thx).<br/><a href=\'https://www.unterrainer.info:8443\' target=\'_blank\' class=\'btn btn-block btn-xs wrap btn-primary\'>Throbax GIT Repositories</a>',
    'InfoList2.Title': 'Preconditions',
    'InfoList2.Value': 'You need good programming-skills, an invitation from Psilo, to even reach this page here, and you need access to our GIT repositories. This access is exclusively done over HTTPS<br/>Then you\'ll need the tools, that are listed later on (the infrastructure), the ability to keep a secret and some minor experience using GIT.',
    'InfoList3.Title': 'Non-Disclosure Agreement',
    'InfoList3.Value': 'Everything you will hear, see or produce when working on this project (of course only things connected  to the game and the code of the game), is property of Unterrainer Informatik OG. Please respect that.<br/>Thanks',
    PrerequisitesList: 'Preconditions',
    'PrerequisitesList1.Title': '.NET Framework 4.5',
    'PrerequisitesList1.Value': 'Because of various reasons (the most important was the Task-Parallel-Library) we changed to .NET Framework version 4.5. You should have no problem installing that.',
    'PrerequisitesList2.Title': 'Visual Studio 2013',
    'PrerequisitesList2.Value': 'Every version of VS2013 will do, even the express-version.',
    'PrerequisitesList3.Title': 'XNA 4 (installation on VS2012 or VS2013!)',
    'PrerequisitesList3.Value': 'Long story cut short: You\'ll need an installed VS2010 in order to get this to work.<br/>Without that you can\'t run XNA in VS2012 or VS 2013.<br/><a href=\'https://files.unterrainer.info/guides/Install XNA on VS2012.mht\' target=\'_blank\' class=\'btn btn-block btn-xs wrap btn-primary\'>Install XNA on VS2012 (eng)</a><br/><a href=\'https://files.unterrainer.info/guides/XNA Game Studio 4.0.zip\' target=\'_blank\' class=\'btn btn-block btn-xs wrap btn-info\'>You may try to use these files instead of installing VS2010 yourself (no guarantee that it will work)</a>',
    'PrerequisitesList4.Title': 'GIT GUI for Windows',
    'PrerequisitesList4.Value': 'We use SourceTree from Atlassian as GUI for GIT. It\'s a free program, so feel free to join.<br/><a href=\'https://files.unterrainer.info/guides/SourceTreeSetup.exe\' target=\'_blank\' class=\'btn btn-block btn-xs wrap btn-primary\'>Atlassian SourceTree</a>',
    'PrerequisitesList5.Title': 'GIT Credential Winstore',
    'PrerequisitesList5.Value': 'If you get sick of typing your credentials over and over again, just install the following program. It will install smoothly and popup a dialog for you to enter the credentials next time you\'re working with GIT.<br/><a href=\'https://files.unterrainer.info/guides/git-credential-winstore.exe\' target=\'_blank\' class=\'btn btn-block btn-xs wrap btn-primary\'>Git-Credential-Winstore</a>',
    'PrerequisitesList6.Title': 'GIT for Windows (base installation)',
    'PrerequisitesList6.Value': 'This is the basic GIT-installation you will need to participate in this and every other GIT-project.<br/><a href=\'https://files.unterrainer.info/guides/Git-1.9.5-preview20141217.exe\' target=\'_blank\' class=\'btn btn-block btn-xs wrap btn-primary\'>Git-1.9.5-preview20141217</a><br/><br/>Since our site is self-signed, you\'ll need to additionally enter the following line in a command-window after installing GIT on your machine:<br/><pre>git config --global http.sslVerify false</pre>',
    'PrerequisitesList7.Title': 'Throbax WIX-Setup: Tools',
    'PrerequisitesList7.Value': 'Here are a few tools you may have to use when working on the setup.<br/><a href=\'https://files.unterrainer.info/guides/orca.Msi\' target=\'_blank\' class=\'btn btn-block btn-xs wrap btn-primary\'>Orca - to deinstall setups</a><br/><a href=\'https://files.unterrainer.info/guides/Wix38.exe\' target=\'_blank\' class=\'btn btn-block btn-xs wrap btn-primary\'>Wix38 - the version we use</a><br/>',
    PrerequisitesListDescription: 'We tried to create a list of things you\'ll need. If it\'s specifically for a single project, it shows in the heading, otherwise it\'s a global precondition valid for all projects.'
  }